makeCacheMatrix <- function(x = matrix()) {
+     inv <- NULL
+     set <- function(y) {
+         x <<- y
+         inv <<- NULL
+     }
+     get <- function() x
+     setinverse <- function(inverse) inv <<- inverse
+     getinverse <- function() inv
+     list(set = set, get = get,
+          setinverse = setinverse,
+          getinverse = getinverse)
+ }
> cacheinverse <- function(x, ...) {
+     inv <- x$getinverse()
+     if(!is.null(inv)) {
+         message("getting cached data")
+         return(inv)
+     }
+     matrix_to_invert <- x$get()
+     inv <- solve(matrix_to_invert, ...)
+     x$setinverse(inv)
+     inv
+ }
> my_Matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
> my_Matrix$get()
     [,1] [,2]
[1,]    1    3
[2,]    2    4
> 
> cacheinverse(my_Matrix)
     [,1] [,2]
[1,]   -2  1.5
[2,]    1 -0.5
> 
